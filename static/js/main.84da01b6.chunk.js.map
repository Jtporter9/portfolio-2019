{"version":3,"sources":["app/intro/intro.js","app/about/about.js","app/experience/experience.js","app/projects/projects.js","app/skills/skills.js","app/awards/awards.js","app/education/education.js","app/contact/contact.js","app/resume/resume.js","app/drawer.js","App.js","serviceWorker.js","index.js"],"names":["Intro","id","name","className","Container","About","Experience","Projects","Skills","Awards","Education","Contact","Resume","useStyles","makeStyles","theme","root","display","appBar","width","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","flexGrow","backgroundColor","palette","background","default","padding","spacing","PermanentDrawerLeft","classes","React","useEffect","loadCSS","document","querySelector","icons","icon","color","anchor","CssBaseline","Drawer","variant","paper","href","Typography","style","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","Icon","clsx","ListItemText","primary","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84da01b6.chunk.js","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './intro.scss';\n\n\nexport default function Intro() {\n  return (\n        <section id=\"intro\" name=\"intro\">\n          <div className=\"overlay\"></div>\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              I want to <span className=\"teal\">make things</span> <br /> that <span className=\"underline\">make a difference.</span>\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './about.scss';\n\n\nexport default function About() {\n  return (\n        <section id=\"about\" name=\"about\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              About me\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './experience.scss';\n\n\nexport default function Experience() {\n  return (\n        <section id=\"experience\" name=\"experience\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Experience\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './projects.scss';\n\n\nexport default function Projects() {\n  return (\n        <section id=\"projects\" name=\"projects\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Projects\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './skills.scss';\n\n\nexport default function Skills() {\n  return (\n        <section id=\"skills\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Skills\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './awards.scss';\n\n\nexport default function Awards() {\n  return (\n        <section id=\"awards\" name=\"awards\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Awards\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './education.scss';\n\n\nexport default function Education() {\n  return (\n        <section id=\"education\" name=\"education\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Education\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './contact.scss';\n\n\nexport default function Contact() {\n  return (\n        <section id=\"contact\" name=\"contact\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Contact\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport './resume.scss';\n\n\nexport default function Resume() {\n  return (\n        <section id=\"resume\" name=\"resume\">\n          <Container className=\"hero-container\">\n            <h2 className=\"hero-text\">\n              My Resume\n            </h2>\n          </Container>\n        </section>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { loadCSS } from 'fg-loadcss';\nimport clsx from 'clsx';\nimport Icon from '@material-ui/core/Icon';\n\n//COMPONENTS\nimport Intro from './intro/intro';\nimport About from './about/about';\nimport Experience from './experience/experience';\nimport Projects from './projects/projects';\nimport Skills from './skills/skills';\nimport Awards from './awards/awards';\nimport Education from './education/education';\nimport Contact from './contact/contact';\nimport Resume from './resume/resume';\n\n//SCSS\nimport './drawer.scss';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  }\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#font-awesome-css'),\n    );\n  }, []);\n\n  const icons = [\n    {\n      icon: 'fa fa-user',\n      color: '#009688',\n      anchor: '#about'\n    },\n    {\n      icon: 'fa fa-briefcase',\n      color: '#00bcd4',\n      anchor: '#experience'\n    },\n    {\n      icon: 'fa fa-keyboard',\n      color: '#3f51b5',\n      anchor: '#projects'\n    },\n    {\n      icon: 'fa fa-chart-bar',\n      color: '#9c27b0',\n      anchor: '#skills'\n    },\n    {\n      icon: 'fa fa-star',\n      color: '#F44336',\n      anchor: '#awards'\n    },\n    {\n      icon: 'fa fa-university',\n      color: '#ff9800',\n      anchor: '#education'\n    },\n    {\n      icon: 'fa fa-id-card',\n      color: '#795548',\n      anchor: '#contact'\n    },\n    {\n      icon: 'fa fa-file',\n      color: '#424242',\n      anchor: '#resume'\n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div>\n          <a href=\"#intro\">\n            <h1 className=\"name-logo\">\n              J. Tanner <br /> Porter\n            <Typography style={{ color: 'black' }} variant=\"overline\" display=\"block\">\n                Full Stack Developer\n          </Typography>\n            </h1>\n          </a>\n        </div>\n        <Divider />\n        <List>\n          {['About', 'Experience', 'Projects', 'Skills', 'Awards', 'Education', 'Contact', 'Resume'].map((text, index) => (\n            <a className=\"icon-anchor\" href={icons[index].anchor}>\n              <ListItem button key={text}>\n                <ListItemIcon><Icon className={clsx(classes.icon, icons[index].icon)} style={{ color: icons[index].color }} /></ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            </a>\n          ))}\n        </List>\n      </Drawer>\n      <main>\n        <Intro />\n        <About />\n        <Experience />\n        <Projects />\n        <Skills />\n        <Awards />\n        <Education />\n        <Contact />\n        <Resume />\n      </main>\n    </div>\n  );\n}","import React from 'react';\nimport Drawer from './app/drawer';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Drawer />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}